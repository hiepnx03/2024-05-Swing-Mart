/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package org.example.views;

import org.example.controllers.EmployeeController;
import org.example.controllers.UserController;
import org.example.models.Employee;
import org.example.models.Role;
import org.example.models.User;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

/**
 * @author hiepn
 */
public class FormNhanSu extends javax.swing.JFrame {
    private EmployeeController employeeController;
    private DefaultTableModel tableModel;
    private UserController userController;

    public FormNhanSu() {
        initComponents(); // Initialize components first
        showNhanVienTable(); // Then populate the table
        showUserTable();
        userController = new UserController(); // Assign the local instance to the class variable
        loadRoles(); // Load danh sách quyền khi form được tạo
        loadEmployee(); // Load danh sách quyền khi form được tạo
        addEscapeKeyBinding();
    }
    private void addEscapeKeyBinding() {
        String escapeAction = "escapeAction";
        KeyStroke escapeKeyStroke = KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0, false);

        Action escapeActionHandler = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                Object[] options = {"Đăng xuất", "Thoát", "Không"};
                int response = JOptionPane.showOptionDialog(
                        FormNhanSu.this,
                        "Bạn có muốn đăng xuất hay thoát chương trình?",
                        "Xác nhận",
                        JOptionPane.YES_NO_CANCEL_OPTION,
                        JOptionPane.QUESTION_MESSAGE,
                        null,
                        options,
                        options[0]
                );

                if (response == JOptionPane.YES_OPTION) {
                    // Xử lý đăng xuất
                    System.out.println("Bộ phận nhân sự đã đăng xuất");
                    btnDangXuatActionPerformed(null);
                } else if (response == JOptionPane.NO_OPTION) {
                        System.out.println("Đã thoát chương trình");
                    // Thoát chương trình
                    System.exit(0);
                }else if (response == JOptionPane.CANCEL_OPTION) {
                    System.out.println("Không có gì");
                }
            }
        };

        JRootPane rootPane = this.getRootPane();
        rootPane.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(escapeKeyStroke, escapeAction);
        rootPane.getActionMap().put(escapeAction, escapeActionHandler);
    }


    private void loadRoles() {
        UserController userController = new UserController(); // Create an instance of UserController
        List<Role> roles = userController.getAllRoles(); // Call getAllRoles method
        for (Role role : roles) {
            Role.addItem(role.getRoleName());
        }
    }


    private void loadEmployee() {
        List<Employee> employees = userController.getAllEmployees();
        // Assuming you have a combo box named "Employee" to display the employee names
        for (Employee employee : employees) {
            Employee.addItem(employee.getFullName()); // Assuming you have a method to get the full name of an employee
        }
    }

    /**
     * Creates new form FormNhanSu
     */
    private void showNhanVienTable() {
        employeeController = new EmployeeController();
        // Gọi phương thức getAllNhanVienTableModel từ đối tượng EmployeeController
        tableModel = employeeController.getAllNhanVienTableModel();
        // Đặt mô hình dữ liệu cho bảng
        TableQuanLyNhanVien.setModel(tableModel);
    }

    private void showUserTable() {
        userController = new UserController();
        // Gọi phương thức getAllNhanVienTableModel từ đối tượng EmployeeController
        tableModel = userController.getAllUserInfoTableModel();
        // Đặt mô hình dữ liệu cho bảng
        TableUser.setModel(tableModel);
    }

    private Date convertToDate(String dateString) {
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        try {
            return dateFormat.parse(dateString);
        } catch (ParseException e) {
            e.printStackTrace();
            return null; // Handle the parse exception appropriately
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPmain = new javax.swing.JPanel();
        jtPmain = new javax.swing.JTabbedPane();
        jPquanlynhanvien = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableQuanLyNhanVien = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        tbEmployeeID = new javax.swing.JTextField();
        tbFirstName = new javax.swing.JTextField();
        tbPosition = new javax.swing.JTextField();
        tbLastName = new javax.swing.JTextField();
        tbSalary = new javax.swing.JTextField();
        tbContactInfo = new javax.swing.JTextField();
        tbHireDate = new javax.swing.JTextField();
        tbDateOfBirth = new javax.swing.JTextField();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnLamRong = new javax.swing.JButton();
        btnThem = new javax.swing.JButton();
        jPquanlytaikhoan = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TableUser = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        btnLamRong1 = new javax.swing.JButton();
        btnXoa1 = new javax.swing.JButton();
        btnSua1 = new javax.swing.JButton();
        btnThem1 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        Employee = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        tbUserID = new javax.swing.JTextField();
        tbUserName = new javax.swing.JTextField();
        tbEmail = new javax.swing.JTextField();
        tbPasswordHash = new javax.swing.JTextField();
        Role = new javax.swing.JComboBox<>();
        jPchamcong = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnDangXuat = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setText("Position");

        jLabel3.setText("EmployeeID");

        jLabel4.setText("FirstName");

        jLabel5.setText("LastName");

        TableQuanLyNhanVien.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        TableQuanLyNhanVien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        TableQuanLyNhanVien.setRowHeight(50);
        TableQuanLyNhanVien.setSelectionBackground(new java.awt.Color(51, 153, 255));
        TableQuanLyNhanVien.setShowHorizontalLines(true);
        TableQuanLyNhanVien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableQuanLyNhanVienMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TableQuanLyNhanVien);
        TableQuanLyNhanVien.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        jLabel6.setText("DateOfBirth");

        jLabel7.setText("ContactInfo");

        jLabel8.setText("HireDate");

        jLabel9.setText("Salary");

        tbEmployeeID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbEmployeeIDActionPerformed(evt);
            }
        });

        tbFirstName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbFirstNameActionPerformed(evt);
            }
        });

        tbPosition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbPositionActionPerformed(evt);
            }
        });

        tbLastName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbLastNameActionPerformed(evt);
            }
        });

        tbSalary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbSalaryActionPerformed(evt);
            }
        });

        tbContactInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbContactInfoActionPerformed(evt);
            }
        });

        tbHireDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbHireDateActionPerformed(evt);
            }
        });

        tbDateOfBirth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbDateOfBirthActionPerformed(evt);
            }
        });

        btnSua.setBackground(new java.awt.Color(108, 117, 125));
        btnSua.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnSua.setForeground(new java.awt.Color(255, 255, 255));
        btnSua.setText("Sửa");
        btnSua.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setBackground(new java.awt.Color(220, 53, 69));
        btnXoa.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnXoa.setForeground(new java.awt.Color(255, 255, 255));
        btnXoa.setText("Xóa");
        btnXoa.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnLamRong.setBackground(new java.awt.Color(0, 204, 204));
        btnLamRong.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnLamRong.setForeground(new java.awt.Color(255, 255, 255));
        btnLamRong.setText("Làm Rỗng");
        btnLamRong.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnLamRong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamRongActionPerformed(evt);
            }
        });

        btnThem.setBackground(new java.awt.Color(0, 123, 255));
        btnThem.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnThem.setForeground(new java.awt.Color(255, 255, 255));
        btnThem.setText("Thêm");
        btnThem.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPquanlynhanvienLayout = new javax.swing.GroupLayout(jPquanlynhanvien);
        jPquanlynhanvien.setLayout(jPquanlynhanvienLayout);
        jPquanlynhanvienLayout.setHorizontalGroup(
            jPquanlynhanvienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPquanlynhanvienLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPquanlynhanvienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPquanlynhanvienLayout.createSequentialGroup()
                        .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnLamRong)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPquanlynhanvienLayout.createSequentialGroup()
                        .addGroup(jPquanlynhanvienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPquanlynhanvienLayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(tbEmployeeID, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPquanlynhanvienLayout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(tbFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPquanlynhanvienLayout.createSequentialGroup()
                                .addGroup(jPquanlynhanvienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPquanlynhanvienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tbLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tbPosition, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 184, Short.MAX_VALUE)
                        .addGroup(jPquanlynhanvienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPquanlynhanvienLayout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(tbDateOfBirth, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPquanlynhanvienLayout.createSequentialGroup()
                                .addGroup(jPquanlynhanvienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel9))
                                .addGap(18, 18, 18)
                                .addGroup(jPquanlynhanvienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tbContactInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tbHireDate, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tbSalary, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(129, 129, 129))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPquanlynhanvienLayout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())))
        );
        jPquanlynhanvienLayout.setVerticalGroup(
            jPquanlynhanvienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPquanlynhanvienLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(jPquanlynhanvienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPquanlynhanvienLayout.createSequentialGroup()
                        .addGroup(jPquanlynhanvienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(tbEmployeeID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPquanlynhanvienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(tbFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPquanlynhanvienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPquanlynhanvienLayout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2))
                            .addGroup(jPquanlynhanvienLayout.createSequentialGroup()
                                .addComponent(tbLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(tbPosition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPquanlynhanvienLayout.createSequentialGroup()
                        .addGroup(jPquanlynhanvienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(tbDateOfBirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPquanlynhanvienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPquanlynhanvienLayout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel9))
                            .addGroup(jPquanlynhanvienLayout.createSequentialGroup()
                                .addComponent(tbContactInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(tbHireDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tbSalary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPquanlynhanvienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSua, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(btnXoa, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(btnLamRong, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(btnThem, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)))
        );

        jtPmain.addTab("Quản Lý Nhân Viên", jPquanlynhanvien);

        TableUser.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        TableUser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        TableUser.setRowHeight(50);
        TableUser.setSelectionBackground(new java.awt.Color(51, 153, 255));
        TableUser.setShowHorizontalLines(true);
        TableUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableUserMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(TableUser);

        btnLamRong1.setBackground(new java.awt.Color(0, 204, 204));
        btnLamRong1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnLamRong1.setForeground(new java.awt.Color(255, 255, 255));
        btnLamRong1.setText("Làm Rỗng");

        btnXoa1.setBackground(new java.awt.Color(220, 53, 69));
        btnXoa1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnXoa1.setForeground(new java.awt.Color(255, 255, 255));
        btnXoa1.setText("Xóa");
        btnXoa1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoa1ActionPerformed(evt);
            }
        });

        btnSua1.setBackground(new java.awt.Color(0, 123, 255));
        btnSua1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnSua1.setForeground(new java.awt.Color(255, 255, 255));
        btnSua1.setText("Sửa");
        btnSua1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSua1ActionPerformed(evt);
            }
        });

        btnThem1.setBackground(new java.awt.Color(108, 117, 125));
        btnThem1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnThem1.setForeground(new java.awt.Color(255, 255, 255));
        btnThem1.setText("Thêm");
        btnThem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThem1ActionPerformed(evt);
            }
        });

        jLabel10.setText("UserID");

        jLabel11.setText("Username");

        jLabel12.setText("PasswordHash");

        jLabel13.setText("Email");

        Employee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmployeeActionPerformed(evt);
            }
        });

        jLabel14.setText("EmployeeID");

        jLabel15.setText("Role");

        tbUserID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbUserIDActionPerformed(evt);
            }
        });

        tbUserName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbUserNameActionPerformed(evt);
            }
        });

        tbEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbEmailActionPerformed(evt);
            }
        });

        tbPasswordHash.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbPasswordHashActionPerformed(evt);
            }
        });

        Role.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RoleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnThem1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSua1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnXoa1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnLamRong1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addGap(18, 18, 18)
                                .addComponent(tbEmail))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addGap(18, 18, 18)
                                .addComponent(tbPasswordHash))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(tbUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(18, 18, 18)
                                .addComponent(tbUserID, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(302, 302, 302)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addComponent(jLabel14))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Employee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Role, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(287, 287, 287))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel10)
                                .addComponent(Employee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(tbUserID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(tbUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(Role, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(tbPasswordHash, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(tbEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSua1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnXoa1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnLamRong1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnThem1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPquanlytaikhoanLayout = new javax.swing.GroupLayout(jPquanlytaikhoan);
        jPquanlytaikhoan.setLayout(jPquanlytaikhoanLayout);
        jPquanlytaikhoanLayout.setHorizontalGroup(
            jPquanlytaikhoanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPquanlytaikhoanLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 859, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPquanlytaikhoanLayout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 807, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44))
        );
        jPquanlytaikhoanLayout.setVerticalGroup(
            jPquanlytaikhoanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPquanlytaikhoanLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jtPmain.addTab("Quản Lý Tài Khoản", jPquanlytaikhoan);

        javax.swing.GroupLayout jPchamcongLayout = new javax.swing.GroupLayout(jPchamcong);
        jPchamcong.setLayout(jPchamcongLayout);
        jPchamcongLayout.setHorizontalGroup(
            jPchamcongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 871, Short.MAX_VALUE)
        );
        jPchamcongLayout.setVerticalGroup(
            jPchamcongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 638, Short.MAX_VALUE)
        );

        jtPmain.addTab("Chấm Công", jPchamcong);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Bộ Phận Nhân Sự");

        btnDangXuat.setBackground(new java.awt.Color(220, 53, 69));
        btnDangXuat.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnDangXuat.setForeground(new java.awt.Color(255, 255, 255));
        btnDangXuat.setText("Đăng Xuất");
        btnDangXuat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDangXuatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPmainLayout = new javax.swing.GroupLayout(jPmain);
        jPmain.setLayout(jPmainLayout);
        jPmainLayout.setHorizontalGroup(
            jPmainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPmainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPmainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtPmain)
                    .addGroup(jPmainLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 669, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(btnDangXuat)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPmainLayout.setVerticalGroup(
            jPmainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPmainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPmainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDangXuat))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jtPmain)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPmain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPmain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void RoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RoleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RoleActionPerformed

    private void tbPasswordHashActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbPasswordHashActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tbPasswordHashActionPerformed

    private void tbEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tbEmailActionPerformed

    private void tbUserNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbUserNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tbUserNameActionPerformed

    private void tbUserIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbUserIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tbUserIDActionPerformed

    private void EmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EmployeeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EmployeeActionPerformed

    private void btnThem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThem1ActionPerformed
        // Lấy thông tin từ các trường dữ liệu trên giao diện
        String username = tbUserName.getText();
        String passwordHash = tbPasswordHash.getText();
        String email = tbEmail.getText();
        String employeeName = (String) Employee.getSelectedItem(); // Lấy tên nhân viên từ JComboBox
        String roleName = (String) Role.getSelectedItem(); // Lấy tên quyền từ JComboBox

        // Tạo một đối tượng User từ thông tin thu thập được
        User user = new User(username, passwordHash, email);

        // Gọi phương thức addUser của UserController để thêm người dùng mới
        UserController userController = new UserController();

        // Tìm roleID từ tên quyền
        int roleID = userController.findRoleIDByRoleName(roleName);

        // Thực hiện thêm người dùng và kiểm tra kết quả
        String result = userController.addUser(user, employeeName, roleID);

        // Kiểm tra xem thêm người dùng có thành công hay không và thông báo cho người dùng
        switch (result) {
            case "Success":
            JOptionPane.showMessageDialog(this, "Thêm người dùng thành công!");
            // Load lại bảng
            showUserTable();
            loadEmployee();
            showNhanVienTable();
            // Xóa các trường nhập liệu sau khi thêm thành công
            clearInputFields();
            break;
            case "Username already exists.":
            JOptionPane.showMessageDialog(this, "Tên người dùng đã tồn tại!");
            break;
            case "Email already exists.":
            JOptionPane.showMessageDialog(this, "Email đã tồn tại!");
            break;
            case "Employee ID already exists.":
            JOptionPane.showMessageDialog(this, "Employee ID đã tồn tại!");
            break;
            default:
            JOptionPane.showMessageDialog(this, "Thêm người dùng thất bại!");
            break;
        }
    }//GEN-LAST:event_btnThem1ActionPerformed

    private void btnSua1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSua1ActionPerformed
        // TODO add your handling code here:
        // Lấy thông tin từ các trường dữ liệu trên giao diện
        String username = tbUserName.getText();
        String passwordHash = tbPasswordHash.getText();
        String email = tbEmail.getText();
        String employeeName = (String) Employee.getSelectedItem(); // Lấy tên nhân viên từ JComboBox
        String roleName = (String) Role.getSelectedItem(); // Lấy tên quyền từ JComboBox

        // Tạo một đối tượng User từ thông tin thu thập được
        User user = new User(username, passwordHash, email);

        // Gọi phương thức updateUser của UserController để sửa thông tin người dùng
        UserController userController = new UserController();

        // Tìm roleID từ tên quyền
        int roleID = userController.findRoleIDByRoleName(roleName);

        // Thực hiện sửa thông tin người dùng và kiểm tra kết quả
        boolean success = userController.updateUser(user, employeeName, roleID);

        // Kiểm tra xem sửa thông tin người dùng có thành công hay không và thông báo cho người dùng
        if (success) {
            JOptionPane.showMessageDialog(this, "Sửa thông tin người dùng thành công!");
            // Cập nhật lại bảng hiển thị thông tin người dùng
            showUserTable();
            loadEmployee();
            showNhanVienTable();
        } else {
            JOptionPane.showMessageDialog(this, "Sửa thông tin người dùng thất bại!");
        }
    }//GEN-LAST:event_btnSua1ActionPerformed

    private void btnXoa1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoa1ActionPerformed
        // TODO add your handling code here:
        int selectedRow = TableUser.getSelectedRow();
        if (selectedRow != -1) { // Ensure that a row is selected
            int userID = (int) TableUser.getValueAt(selectedRow, 0); // Assuming the first column contains userID
            UserController userController = new UserController();
            boolean success = userController.deleteUser(userID);
            if (success) {
                JOptionPane.showMessageDialog(this, "Xóa người dùng thành công!");
                // Load lại bảng người dùng sau khi xóa
                showUserTable();
                loadEmployee();
                showNhanVienTable();
            } else {
                JOptionPane.showMessageDialog(this, "Xóa người dùng thất bại!");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một người dùng để xóa!");
        }
    }//GEN-LAST:event_btnXoa1ActionPerformed

    private void TableUserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableUserMouseClicked
        int selectedRow = TableUser.getSelectedRow();

        if (selectedRow != -1) {
            int userID = (int) TableUser.getValueAt(selectedRow, 0);
            String username = (String) TableUser.getValueAt(selectedRow, 1);
            String passwordHash = (String) TableUser.getValueAt(selectedRow, 2);
            String email = (String) TableUser.getValueAt(selectedRow, 3);

            tbUserID.setText(String.valueOf(userID));
            tbUserName.setText(username);
            tbPasswordHash.setText(passwordHash);
            tbEmail.setText(email);

            Role role = userController.findRoleByUserId(userID);
            if (role != null) {
                selectRole(role.getRoleName());
            }

            // Fetch and select the employee associated with the user
            String fullName = userController.findEmployeeByUserId(userID);
            if (fullName != null) {
                selectEmployee(fullName);
            } else {
                Employee.setSelectedItem(null); // Clear selection if employee is not found
            }

        }
    }//GEN-LAST:event_TableUserMouseClicked

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // Get input values from text fields
        String firstName = tbFirstName.getText();
        String lastName = tbLastName.getText();
        String position = tbPosition.getText();
        String dateOfBirthString = tbDateOfBirth.getText(); // Assuming this is a string representing date of birth
        String contactInfo = tbContactInfo.getText();
        String hireDateString = tbHireDate.getText(); // Assuming this is a string representing hire date
        String salaryString = tbSalary.getText(); // Assuming this is a string representing salary
        // You can extract other fields similarly

        // Check if date of birth and hire date fields are not empty
        // Check if any required field is empty
        if (firstName.isEmpty() || lastName.isEmpty() || position.isEmpty() || contactInfo.isEmpty() || dateOfBirthString.isEmpty() || hireDateString.isEmpty() || salaryString.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please fill in all required fields", "Error", JOptionPane.ERROR_MESSAGE);
            return; // Exit method if any required field is empty
        }

        // Convert string dates to java.util.Date
        Date dateOfBirthUtil = convertToDate(dateOfBirthString);
        Date hireDateUtil = convertToDate(hireDateString);

        // Check if date conversion is successful
        if (dateOfBirthUtil == null || hireDateUtil == null) {
            JOptionPane.showMessageDialog(this, "Invalid date format", "Error", JOptionPane.ERROR_MESSAGE);
            return; // Exit method if date format is invalid
        }

        // Convert java.util.Date to java.sql.Date
        java.sql.Date dateOfBirth = new java.sql.Date(dateOfBirthUtil.getTime());
        java.sql.Date hireDate = new java.sql.Date(hireDateUtil.getTime());

        // Convert string salary to double
        double salary = Double.parseDouble(salaryString);

        // Now create the Employee object
        Employee employee = new Employee();
        employee.setFirstName(firstName);
        employee.setLastName(lastName);
        employee.setPosition(position);
        employee.setDateOfBirth(dateOfBirth);
        employee.setContactInfo(contactInfo);
        employee.setHireDate(hireDate);
        employee.setSalary(salary);
        // Set other fields as needed

        // Now call the controller to add the employee
        EmployeeController controller = new EmployeeController();
        boolean success = controller.addEmployee(employee);

        if (success) {
            // Show success message
            JOptionPane.showMessageDialog(this, "Employee added successfully");

            // Clear input fields after successful addition
            clearFields();
            showUserTable();
            loadEmployee();
            showNhanVienTable();
            // Refresh employee table
            showNhanVienTable();
        } else {
            // Show error message
            JOptionPane.showMessageDialog(this, "Failed to add employee", "Error", JOptionPane.ERROR_MESSAGE);
        }
        }

        // Phương thức để làm mới các trường nhập liệu sau khi thêm nhân viên thành công
        private void clearFields() {
            tbEmployeeID.setText("");
            tbFirstName.setText("");
            tbLastName.setText("");
            tbPosition.setText("");
            tbDateOfBirth.setText("");
            tbContactInfo.setText("");
            tbHireDate.setText("");
            tbSalary.setText("");
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnLamRongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamRongActionPerformed
        // TODO add your handling code here:
        tbEmployeeID.setText("");
        tbFirstName.setText("");
        tbLastName.setText("");
        tbPosition.setText("");
        tbDateOfBirth.setText("");
        tbContactInfo.setText("");
        tbHireDate.setText("");
        tbSalary.setText("");
    }//GEN-LAST:event_btnLamRongActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:

        // Fetch selected row index
        int selectedRow = TableQuanLyNhanVien.getSelectedRow();

        if (selectedRow != -1) {
            // Fetch the employee ID from the selected row
            int employeeID = (int) TableQuanLyNhanVien.getValueAt(selectedRow, 0);

            // Confirm deletion
            int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this employee?", "Confirm Delete", JOptionPane.YES_NO_OPTION);

            if (confirm == JOptionPane.YES_OPTION) {
                EmployeeController controller = new EmployeeController();
                boolean success = controller.deleteEmployee(employeeID);

                if (success) {
                    // Show success message
                    JOptionPane.showMessageDialog(this, "Employee deleted successfully");

                    // Refresh employee table
                    showUserTable();
                    loadEmployee();
                    showNhanVienTable();
                } else {
                    // Show error message
                    JOptionPane.showMessageDialog(this, "Failed to delete employee", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please select an employee to delete");
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        // Fetch selected row index
        // Get input values from text fields
        String firstName = tbFirstName.getText();
        String lastName = tbLastName.getText();
        String position = tbPosition.getText();
        String dateOfBirthString = tbDateOfBirth.getText(); // Assuming this is a string representing date of birth
        String contactInfo = tbContactInfo.getText();
        String hireDateString = tbHireDate.getText(); // Assuming this is a string representing hire date
        String salaryString = tbSalary.getText(); // Assuming this is a string representing salary
        // You can extract other fields similarly

        // Check if any required field is empty
        if (firstName.isEmpty() || lastName.isEmpty() || position.isEmpty() || dateOfBirthString.isEmpty() || hireDateString.isEmpty() || salaryString.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please fill in all required fields", "Error", JOptionPane.ERROR_MESSAGE);
            return; // Exit method if any required field is empty
        }

        // Convert string dates to java.util.Date
        Date dateOfBirthUtil = convertToDate(dateOfBirthString);
        Date hireDateUtil = convertToDate(hireDateString);

        // Convert java.util.Date to java.sql.Date
        java.sql.Date dateOfBirth = new java.sql.Date(dateOfBirthUtil.getTime());
        java.sql.Date hireDate = new java.sql.Date(hireDateUtil.getTime());

        // Convert string salary to double
        double salary = Double.parseDouble(salaryString);

        // Now create the Employee object
        Employee employee = new Employee();
        employee.setFirstName(firstName);
        employee.setLastName(lastName);
        employee.setPosition(position);
        employee.setDateOfBirth(dateOfBirth);
        employee.setContactInfo(contactInfo);
        employee.setHireDate(hireDate);
        employee.setSalary(salary);
        // Set other fields as needed

        // Now call the controller to add the employee
        EmployeeController controller = new EmployeeController();
        boolean success = controller.addEmployee(employee);

        if (success) {
            // Show success message
            JOptionPane.showMessageDialog(this, "Employee added successfully");

            // Clear input fields after successful addition
            clearFields();
            showUserTable();
            loadEmployee();
            showNhanVienTable();
            // Refresh employee table
            showNhanVienTable();
        } else {
            // Show error message
            JOptionPane.showMessageDialog(this, "Failed to add employee", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void tbDateOfBirthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbDateOfBirthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tbDateOfBirthActionPerformed

    private void tbHireDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbHireDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tbHireDateActionPerformed

    private void tbContactInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbContactInfoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tbContactInfoActionPerformed

    private void tbSalaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbSalaryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tbSalaryActionPerformed

    private void tbLastNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbLastNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tbLastNameActionPerformed

    private void tbPositionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbPositionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tbPositionActionPerformed

    private void tbFirstNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbFirstNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tbFirstNameActionPerformed

    private void tbEmployeeIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbEmployeeIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tbEmployeeIDActionPerformed

    private void TableQuanLyNhanVienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableQuanLyNhanVienMouseClicked
        // TODO add your handling code here:
        // Get the index of the selected row
        int selectedRow = TableQuanLyNhanVien.getSelectedRow();

        // Ensure a row is actually selected
        if (selectedRow != -1) {
            // Get the values from the selected row and populate the form fields
            tbEmployeeID.setText((String) TableQuanLyNhanVien.getValueAt(selectedRow, 0).toString());
            tbFirstName.setText((String) TableQuanLyNhanVien.getValueAt(selectedRow, 1));
            tbLastName.setText((String) TableQuanLyNhanVien.getValueAt(selectedRow, 2));
            tbPosition.setText((String) TableQuanLyNhanVien.getValueAt(selectedRow, 3));
            tbDateOfBirth.setText(TableQuanLyNhanVien.getValueAt(selectedRow, 4).toString());
            tbContactInfo.setText((String) TableQuanLyNhanVien.getValueAt(selectedRow, 5));
            tbHireDate.setText(TableQuanLyNhanVien.getValueAt(selectedRow, 6).toString());
            tbSalary.setText(TableQuanLyNhanVien.getValueAt(selectedRow, 7).toString());
            // Optionally set other fields if present
        }
    }//GEN-LAST:event_TableQuanLyNhanVienMouseClicked

    private void btnDangXuatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDangXuatActionPerformed
        // TODO add your handling code here:
        FormDangNhap loginForm = new FormDangNhap(); // Assuming LoginForm is your login screen
        loginForm.setVisible(true);
        this.dispose(); // Close the current window
    }//GEN-LAST:event_btnDangXuatActionPerformed

    private void clearInputFields() {
        // Clear the text fields and reset combo boxes after successful addition
        tbUserName.setText("");
        tbPasswordHash.setText("");
        tbEmail.setText("");
        tbUserID.setText("");
        Role.setSelectedIndex(0); // Assuming the first item is a default or empty option
    }

    private void selectRole(String roleName) {
        for (int i = 0; i < Role.getItemCount(); i++) {
            String item = (String) Role.getItemAt(i);
            if (item.equals(roleName)) {
                Role.setSelectedItem(item);
                break;
            }
        }
    }

    private void selectEmployee(String employeeName) {
        for (int i = 0; i < Employee.getItemCount(); i++) {
            String item = (String) Employee.getItemAt(i);
            if (item.equals(employeeName)) {
                Employee.setSelectedItem(item);
                break;
            }
        }
    }


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormNhanSu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormNhanSu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormNhanSu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormNhanSu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormNhanSu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Employee;
    private javax.swing.JComboBox<String> Role;
    private javax.swing.JTable TableQuanLyNhanVien;
    private javax.swing.JTable TableUser;
    private javax.swing.JButton btnDangXuat;
    private javax.swing.JButton btnLamRong;
    private javax.swing.JButton btnLamRong1;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnSua1;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThem1;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btnXoa1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPchamcong;
    private javax.swing.JPanel jPmain;
    private javax.swing.JPanel jPquanlynhanvien;
    private javax.swing.JPanel jPquanlytaikhoan;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jtPmain;
    private javax.swing.JTextField tbContactInfo;
    private javax.swing.JTextField tbDateOfBirth;
    private javax.swing.JTextField tbEmail;
    private javax.swing.JTextField tbEmployeeID;
    private javax.swing.JTextField tbFirstName;
    private javax.swing.JTextField tbHireDate;
    private javax.swing.JTextField tbLastName;
    private javax.swing.JTextField tbPasswordHash;
    private javax.swing.JTextField tbPosition;
    private javax.swing.JTextField tbSalary;
    private javax.swing.JTextField tbUserID;
    private javax.swing.JTextField tbUserName;
    // End of variables declaration//GEN-END:variables
}
